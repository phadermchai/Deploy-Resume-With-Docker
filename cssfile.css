*{
	font-family: Helvetica;
}

body,html{
	margin:auto;
	padding:auto;
}

.wrapper {
  /* The height needs to be set to a fixed value for the effect to work.
   * 100vh is the full height of the viewport. */
  height: 100vh;
  /* The scaling of the images would add a horizontal scrollbar, so disable x overflow. */
  overflow-x: hidden;
  /* Enable scrolling on the page. */
  overflow-y: auto;
  /* Set the perspective to 2px. This is essentailly the simulated distance from the viewport to transformed objects.*/
  perspective: 2px;
}

.Intro{
	text-align:center;
}

#NameText{
	font-size:40px;
	text-align:center;
	color: white;
}

#ProfileText{
	font-size:40px;
	color: white;
	text-align:center;
}

#SkillText{
	font-size:40px;
	color: white;
	text-align:center;
}

#WorkText{
	font-size:40px;
	color: white;
	text-align:center;
}

#ContectText{
	font-size:40px;
	color: white;
	text-align:center;
}

p{
	color: white;
}

h3{
	color: white;
	text-indent:100px;
}

ul{
	list-style-type: none;
	color: white;
	font-size:20px;
	text-align: justify;
	text-indent: 140px;
}

.line{
	width: 100%;
	border-bottom: 1px solid black;
	position: absolute;
}

.section {
  /* Needed for children to be absolutely positioned relative to the parent. */
  position: relative;
  /* The height of the container. Must be set, but it doesn't really matter what the value is. */
  height: 85vh;
  
  /* For text formatting. */
  justify-content: center;
  color: white;
}

.parallax::after {
  /* Display and position the pseudo-element */
  content: " ";
  position: absolute;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
  
  /* Move the pseudo-element back away from the camera,
   * then scale it back up to fill the viewport.
   * Because the pseudo-element is further away, it appears to move more slowly, like in real life. */
  transform: translateZ(-1px) scale(1.5);
  /* Force the background image to fill the whole element. */
  
  background-size: 100%;
  /* Keep the image from overlapping sibling elements. */ 
  z-index: -1;
}

/* The styling for the static div. */
.static {
  width:100%;
  height:140vh;
  background: linear-gradient(to bottom right, #7a7a7a, #303030)
}

/* Sets the actual background images to adorable kitties. This part is crucial. */
.bg1::after {
  width:100%;
  height:100vh;
  background-image: url('wall.jpg');
}
.bg2::after {
width:100%;
  height:40vh;
  background-image: url('wall2.jpg');
}
